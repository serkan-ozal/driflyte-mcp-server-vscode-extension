name: VSCode Marketplace Release

on:
  workflow_dispatch:
    inputs:
      version_scale:
        type: choice
        description: "Version scale"
        required: true
        default: "patch"
        options:
          - patch
          - minor
          - major

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating GitHub releases
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: Configure Git User
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: https://registry.npmjs.org
      - name: NPM Install
        run: npm ci
      - name: Bump Version
        run: npm version ${{ inputs.version_scale }} --no-git-tag-version
      - name: Read new version
        id: ver
        shell: bash
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
      - name: Commit & Push Version Bump
        run: |
          git add package.json package-lock.json || true
          git commit -m "chore(release): v${{ steps.ver.outputs.version }}"
          git push
      - name: NPM Compile
        run: npm run compile
      - name: VSIX Package
        run: npm run package
      - name: Publish to Marketplace
        env:
          VSCE_PAT: ${{ secrets.VSCODE_PUBLISH_ACCESS_TOKEN }}
        run: npm run publish
      - name: Create and Push Tag
        run: |
          git tag "v${{ steps.ver.outputs.version }}"
          git push origin "v${{ steps.ver.outputs.version }}"
      - name: Find VSIX filename
        id: vsix
        run: echo "file=$(ls *.vsix)" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ format('Release {0}', steps.ver.outputs.version) }}
          tag_name: v${{ steps.ver.outputs.version }}
          body: ${{ format('Release {0}', steps.ver.outputs.version) }}
          files: |
            ${{ steps.vsix.outputs.file }}
